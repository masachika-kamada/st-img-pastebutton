{"ast":null,"code":"import React from\"react\";import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class ImageClipboardComponent extends StreamlitComponentBase{constructor(){super(...arguments);this.state={imageData:null,error:null};this.handleButtonClick=async()=>{try{const clipboardItems=await navigator.clipboard.read();let imageFound=false;for(const clipboardItem of clipboardItems){const imageType=clipboardItem.types.find(type=>type.startsWith(\"image/\"));if(imageType){const blob=await clipboardItem.getType(imageType);const reader=new FileReader();reader.onloadend=()=>{this.setState({imageData:reader.result,error:null},()=>{Streamlit.setComponentValue(this.state.imageData);});};reader.readAsDataURL(blob);imageFound=true;break;}}if(!imageFound){this.setState({error:\"No image found in the clipboard.\"});}}catch(err){if(err instanceof DOMException&&err.name===\"NotAllowedError\"){console.log(\"Clipboard access denied or cancelled by the user.\");}else if(err instanceof Error){this.setState({error:\"Failed to read the image. Details: \"+err.message});console.error(\"Failed to read clipboard contents: \",err.message);}else{this.setState({error:\"Failed to read the image.\"});console.error(\"Failed to read clipboard contents\");}}};this.render=()=>{const label=String(this.props.args[\"label\"]);const{error}=this.state;const buttonStyle={backgroundColor:\"#ffffff\",color:\"black\",padding:\"5px 10px\",border:\"1px solid #cccccc\",borderRadius:\"8px\",cursor:\"pointer\",fontSize:\"14px\",outline:\"none\",transition:\"color 0.3s, border-color 0.3s\",display:\"inline-block\",height:\"40px\",lineHeight:\"27px\"};const buttonHoverStyle={color:\"red\",borderColor:\"red\"};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:this.handleButtonClick,style:buttonStyle,onMouseEnter:e=>{Object.assign(e.currentTarget.style,buttonHoverStyle);},onMouseLeave:e=>{Object.assign(e.currentTarget.style,buttonStyle);},children:/*#__PURE__*/_jsx(\"label\",{children:label})}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:error})]});};}}export default withStreamlitConnection(ImageClipboardComponent);","map":{"version":3,"names":["React","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsx","_jsx","jsxs","_jsxs","ImageClipboardComponent","constructor","arguments","state","imageData","error","handleButtonClick","clipboardItems","navigator","clipboard","read","imageFound","clipboardItem","imageType","types","find","type","startsWith","blob","getType","reader","FileReader","onloadend","setState","result","setComponentValue","readAsDataURL","err","DOMException","name","console","log","Error","message","render","label","String","props","args","buttonStyle","backgroundColor","color","padding","border","borderRadius","cursor","fontSize","outline","transition","display","height","lineHeight","buttonHoverStyle","borderColor","children","onClick","style","onMouseEnter","e","Object","assign","currentTarget","onMouseLeave"],"sources":["/Users/suzuki/Desktop/st-img-pastebutton/st_img_pastebutton/frontend/src/MyComponent.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\n\ninterface State {\n  imageData: string | null;\n  error: string | null;\n}\n\nclass ImageClipboardComponent extends StreamlitComponentBase<State> {\n  public state: State = { imageData: null, error: null };\n\n  private handleButtonClick = async (): Promise<void> => {\n    try {\n      const clipboardItems = await navigator.clipboard.read();\n      let imageFound = false;\n      for (const clipboardItem of clipboardItems) {\n        const imageType = clipboardItem.types.find(type => type.startsWith(\"image/\"));\n        if (imageType) {\n          const blob = await clipboardItem.getType(imageType);\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            this.setState({ imageData: reader.result as string, error: null }, () => {\n              Streamlit.setComponentValue(this.state.imageData);\n            });\n          };\n          reader.readAsDataURL(blob);\n          imageFound = true;\n          break;\n        }\n      }\n\n      if (!imageFound) {\n        this.setState({ error: \"No image found in the clipboard.\" });\n      }\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"NotAllowedError\") {\n        console.log(\"Clipboard access denied or cancelled by the user.\");\n      } else if (err instanceof Error) {\n        this.setState({ error: \"Failed to read the image. Details: \" + err.message });\n        console.error(\"Failed to read clipboard contents: \", err.message);\n      } else {\n        this.setState({ error: \"Failed to read the image.\" });\n        console.error(\"Failed to read clipboard contents\");\n      }\n    }\n  };\n\n  public render = (): React.ReactNode => {  \n    const label = String(this.props.args[\"label\"])\n    const { error } = this.state;\n\n    const buttonStyle = {\n      backgroundColor: \"#ffffff\",\n      color: \"black\",\n      padding: \"5px 10px\",\n      border: \"1px solid #cccccc\",\n      borderRadius: \"8px\",\n      cursor: \"pointer\",\n      fontSize: \"14px\",\n      outline: \"none\",\n      transition: \"color 0.3s, border-color 0.3s\",\n      display: \"inline-block\",\n      height: \"40px\",\n      lineHeight: \"27px\",\n    };\n\n    const buttonHoverStyle = {\n      color: \"red\",\n      borderColor: \"red\",\n    };\n\n    return (\n      <div>\n        <button\n          onClick={this.handleButtonClick}\n          style={buttonStyle}\n          onMouseEnter={e => {\n            Object.assign(e.currentTarget.style, buttonHoverStyle);\n          }}\n          onMouseLeave={e => {\n            Object.assign(e.currentTarget.style, buttonStyle);\n          }}\n        >\n          <label>{label}</label>\n        </button>\n        {error && <div style={{ color: \"red\" }}>{error}</div>}\n      </div>\n    );\n  };  \n}\n\nexport default withStreamlitConnection(ImageClipboardComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}